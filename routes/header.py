from fasthtml.common import *
# Import the SVG components properly from fasthtml.svg
from fasthtml.svg import Svg, ft_svg as tag
from pathlib import Path
import re

# Initialize the FastHTML app with necessary headers
app, rt = fast_app(
    hdrs=(
        Script(src="https://cdn.jsdelivr.net/gh/gnat/css-scope-inline@main/script.js"),
    )
)

# Original CSS with adjustments for FastHTML (unchanged)
header_css = """
:root {
  --terminal-dark: #0a0a0a;
  --terminal-light: #1a1a1a;
  --light: #ffffff;
  --acid: #00ff66;
  --voltage: #00ffff;
  --hover-green: #00ff66;
}

.siteHeader {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  background: rgba(26, 26, 26, 0.75);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-bottom: 1px solid rgba(255, 255, 255, 0.07);
  transition: all 0.3s ease;
}

.siteHeader.scrolled {
  background: rgba(10, 10, 10, 0.85);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.25);
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
}

.mainNav {
  max-width: 1400px;
  margin: 0 auto;
  padding: 1.25rem 0.25rem;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  position: relative;
}

.navLeft {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: auto;
}

.navCenter {
  display: flex;
  gap: 2.5rem;
  justify-content: center;
  grid-column: 2;
}

.navRight {
  display: flex;
  gap: 0.5rem;
  justify-content: flex-end;
  grid-column: 3;
}

.navLogoContainer {
  display: flex;
  align-items: center;
}

.navLogo {
  height: 40px;
  width: 40px;
  border-radius: 6px;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  padding: 3px;
  overflow: hidden;
}

.navLogo img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  filter: brightness(0) invert(1);
}

.navText {
  font-size: 1.25rem;
  font-weight: 900;
  color: var(--light);
  text-transform: uppercase;
  letter-spacing: -0.5px;
  margin-left: 0.5rem;
}

.brandLogo {
  font-size: 1.25rem;
  font-weight: 900;
  color: var(--light);
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: -0.5px;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.navCenter a {
  color: var(--light);
  text-decoration: none;
  font-size: 1.5rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.6px;
  position: relative;
  padding: 0.25rem 0.5rem;
  opacity: 0.8;
  transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.navCenter a.active {
  opacity: 1;
  color: var(--hover-green);
  font-weight: 600;
  text-shadow: 0 0 10px rgba(0, 255, 102, 0.4);
  letter-spacing: 0.7px;
}

.navCenter a::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: -3px;
  height: 2px;
  background: var(--hover-green);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.navCenter a:hover::after,
.navCenter a.active::after {
  transform: scaleX(1);
  transform-origin: left;
  box-shadow: 0 0 8px var(--hover-green);
}

.navLogin {
  color: var(--light);
  text-decoration: none;
  padding: 0.75rem 1.5rem;
  font-weight: 700;
  font-size: 1.2rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  position: relative;
  transition: all 0.3s;
  opacity: 0.7;
}

.navLogin:hover {
  opacity: 1;
  color: var(--voltage);
}

.navSignup {
  background: rgba(0, 255, 102, 0.9);
  box-shadow: 0 0 10px rgba(0, 255, 102, 0.3);
  color: var(--terminal-dark);
  text-decoration: none;
  padding: 0.35rem 1.35rem;
  font-weight: 700;
  font-size: 1.2rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  position: relative;
  display: flex;
  align-items: center;
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 6px), calc(100% - 6px) 100%, 0 100%);
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.navSignup:hover {
  transform: translate(-2px, -2px);
  box-shadow: 3px 3px 0 var(--voltage), 0 0 15px rgba(0, 255, 102, 0.8);
  filter: brightness(1.1);
}

.menuButton {
  display: none;
  background: none;
  border: none;
  color: var(--light);
  cursor: pointer;
  padding: 0.5rem;
  z-index: 1001;
  transition: color 0.3s ease;
}

.menuButton svg:first-child {
  display: block;
}

.menuButton svg:last-child {
  display: none;
}

body.menu-open .menuButton svg:first-child {
  display: none;
}

body.menu-open .menuButton svg:last-child {
  display: block;
}

.mobileMenu {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: rgba(10, 10, 10, 0.9);
  backdrop-filter: blur(15px);
  -webkit-backdrop-filter: blur(15px);
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
  flex-direction: column;
  padding: 1.75rem;
  z-index: 1004;
}

/* Make sure this selector exists and works correctly */
.mobileMenu.open {
  display: flex !important;
}

.mobileMenuBackdrop {
  display: none;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 999;
  animation: fadeIn 0.3s ease;
}

.mobileMenuBackdrop.open {
  display: block;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

:global(body.menu-open) {
  overflow: hidden;
}

.mobileLink {
  color: var(--light);
  text-decoration: none;
  font-size: 1.5rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.6px;
  padding: 0.85rem 0;
  margin: 0.25rem 0;
  opacity: 0.8;
  transition: all 0.3s ease;
  text-align: center;
  width: 100%;
  position: relative;
}

.mobileLink:hover {
  opacity: 1;
  color: var(--hover-green);
  transform: translateX(3px);
}

.mobileLink.active {
  opacity: 1;
  color: var(--hover-green);
  font-weight: 600;
  text-shadow: 0 0 8px rgba(0, 255, 102, 0.3);
}

.mobileLink::after {
  content: "";
  position: absolute;
  left: 35%;
  right: 35%;
  bottom: 0.5rem;
  height: 2px;
  background: var(--hover-green);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

.mobileLink:hover::after,
.mobileLink.active::after {
  transform: scaleX(1);
  transform-origin: left;
  box-shadow: 0 0 8px var(--hover-green);
}

.mobileAuthLinks {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 2rem;
  width: 100%;
  border-top: 1px solid rgba(255, 255, 255, 0.07);
  padding-top: 1.5rem;
}

.mobileAuthLinks .navLogin,
.mobileAuthLinks .navSignup {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.85rem 1rem;
  margin: 0;
  border-radius: 4px;
}

.mobileAuthLinks .navLogin {
  background: rgba(255, 255, 255, 0.05);
  transition: all 0.3s ease;
}

.mobileAuthLinks .navLogin:hover {
  background: rgba(255, 255, 255, 0.1);
}

@media (max-width: 980px) {
  .mainNav {
    display: flex;
    justify-content: space-between;
  }
  .navLeft {
    width: 100%;
  }
  .menuButton {
    display: block;
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
  }
  .navCenter,
  .navRight {
    display: none;
  }
  .mobileMenu.open {
    display: flex;
  }
  .mobileMenuBackdrop.open {
    display: block;
  }
}

/* Remove the hover effects for the logo */
.brandLogo:hover .navLogo {
  transform: none;
  background: transparent;
}

.brandLogo:hover .navLogo img {
  filter: none;
  transform: none;
}
"""

# Navigation links data
nav_links = [
    {"href": "/features", "label": "/Features", "id": "nav-features"},
    {"href": "/community", "label": "/Community", "id": "nav-community"},
    {"href": "/blog", "label": "/Blog", "id": "nav-blog"},
    {"href": "/about", "label": "/About", "id": "nav-about"},
]

# Header component
def SiteHeader(current_path):
    # Handle different types of input for current_path
    if isinstance(current_path, dict) and 'path' in current_path:
        # If it's a session dictionary with a path key
        path = current_path['path']
    elif isinstance(current_path, str):
        # If it's already a string path
        path = current_path
    else:
        # Default fallback
        path = "/"
        
    normalized_path = path.rstrip('/')
    
    # Inline JavaScript for menu functionality
    inline_js = """
    // Define toggleMobileMenu as a simple global function
    function toggleMobileMenu() {
        const mobileMenu = document.getElementById('mobileMenu');
        const backdrop = document.getElementById('mobileMenuBackdrop');
        const body = document.body;
        
        if (mobileMenu.classList.contains('open')) {
            mobileMenu.classList.remove('open');
            backdrop.classList.remove('open');
            body.classList.remove('menu-open');
        } else {
            mobileMenu.classList.add('open');
            backdrop.classList.add('open');
            body.classList.add('menu-open');
        }
    }

    function closeMobileMenu() {
        const mobileMenu = document.getElementById('mobileMenu');
        const backdrop = document.getElementById('mobileMenuBackdrop');
        document.body.classList.remove('menu-open');
        mobileMenu.classList.remove('open');
        backdrop.classList.remove('open');
    }
    
    function setActivePage(path) {
        localStorage.setItem('activePage', path);
    }

    // Add direct event listener during page load
    window.addEventListener('load', function() {
        // Set up menu button click handler
        const menuButton = document.getElementById('menuToggleButton');
        if (menuButton) {
            menuButton.addEventListener('click', function(e) {
                e.preventDefault();
                toggleMobileMenu();
            });
        }
        
        // Apply scroll effect to header
        const header = document.querySelector('.siteHeader');
        if (header) {
            window.addEventListener('scroll', function() {
                if (window.scrollY > 20) {
                    header.classList.add('scrolled');
                } else {
                    header.classList.remove('scrolled');
                }
            });
        }
        
        // Set up backdrop click to close menu
        const backdrop = document.getElementById('mobileMenuBackdrop');
        if (backdrop) {
            backdrop.addEventListener('click', closeMobileMenu);
        }
        
        // Apply active state on load
        const currentPath = localStorage.getItem('activePage') || window.location.pathname;
        const normalizedPath = currentPath.endsWith('/') ? currentPath.slice(0, -1) : currentPath;
        
        // Desktop nav links
        document.querySelectorAll('.navCenter a').forEach(link => {
            const linkPath = link.getAttribute('href').endsWith('/') ? 
                link.getAttribute('href').slice(0, -1) : link.getAttribute('href');
            
            if (normalizedPath === linkPath) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
        
        // Mobile nav links
        document.querySelectorAll('.mobileLink').forEach(link => {
            const linkPath = link.getAttribute('href').endsWith('/') ? 
                link.getAttribute('href').slice(0, -1) : link.getAttribute('href');
            
            if (normalizedPath === linkPath) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
        
        // Add click event listeners to all nav links to store active state
        document.querySelectorAll('.navCenter a, .mobileLink').forEach(link => {
            link.addEventListener('click', function() {
                localStorage.setItem('activePage', link.getAttribute('href'));
                closeMobileMenu(); // Close menu when a link is clicked
            });
        });
    });
    """

    # Create SVG hamburger menu icon properly
    hamburger_icon = Svg(
        tag("path", d="M4 8H20M4 16H20", stroke="currentColor", stroke_width="2", stroke_linecap="round", stroke_linejoin="round"),
        width="24", height="24", viewBox="0 0 24 24", fill="none", xmlns="http://www.w3.org/2000/svg"
    )
    
    # Create SVG close icon 
    close_icon = Svg(
        tag("path", d="M18 6L6 18M6 6L18 18", stroke="currentColor", stroke_width="2", stroke_linecap="round", stroke_linejoin="round"),
        width="24", height="24", viewBox="0 0 24 24", fill="none", xmlns="http://www.w3.org/2000/svg"
    )
    
    # Use the actual paths from logo.svg instead of the placeholder
    path1 = tag("path", 
            d="M2002.000000,896.000000 C2002.000000,1587.333374 2002.000000,2277.666748 2002.000000,2968.000000 C1335.333374,2968.000000 668.666687,2968.000000 2.000000,2968.000000 C2.000000,1979.333374 2.000000,990.666687 2.000000,2.000000 C668.666687,2.000000 1335.333374,2.000000 2002.000000,2.000000 C2002.000000,299.666656 2002.000000,597.333313 2002.000000,896.000000M66.044662,693.026794 C62.755234,703.822937 59.291714,714.569519 56.206821,725.423828 C43.504375,770.117615 33.784603,815.405212 27.448465,861.493164 C22.477526,897.651001 18.629709,933.966187 18.587017,970.332092 C17.983309,1484.595337 17.880589,1998.859131 17.660219,2513.122803 C17.644651,2549.452881 17.467321,2585.784180 17.748964,2622.112061 C17.867193,2637.361816 18.928297,2652.606934 19.662453,2667.849121 C20.803106,2691.531250 26.177162,2714.328613 33.836369,2736.700195 C46.714317,2774.315186 67.381371,2807.046387 97.259407,2833.127441 C151.564240,2880.531982 215.337540,2898.201172 286.065918,2886.633545 C337.445068,2878.230469 381.247589,2853.635254 415.769379,2814.218262 C454.267731,2770.260986 471.790253,2717.800537 475.630341,2660.237549 C477.020569,2639.397705 475.959381,2618.429688 479.848907,2597.713379 C485.422394,2568.028076 496.308167,2540.771729 517.518433,2518.894287 C547.579407,2487.887939 584.583130,2474.365479 627.651062,2479.368896 C677.761658,2485.190918 712.859619,2511.955322 733.815918,2557.570312 C745.086243,2582.102295 749.310547,2608.267334 749.468079,2634.916260 C749.651794,2665.994873 752.872009,2696.498047 761.850525,2726.285645 C777.013000,2776.589600 804.806213,2818.499756 848.069031,2848.516602 C902.507629,2886.287354 962.734131,2898.513428 1027.933960,2884.253662 C1069.227783,2875.221924 1105.243774,2856.187744 1135.321655,2826.682617 C1183.632568,2779.291748 1204.076416,2719.916504 1207.651733,2653.670654 C1208.474609,2638.422607 1208.101685,2623.048340 1209.917847,2607.928711 C1213.966797,2574.221924 1225.745239,2543.791748 1249.471924,2518.443848 C1286.566650,2478.814453 1347.861694,2467.101807 1398.115601,2489.539062 C1438.676270,2507.648438 1461.878784,2539.943115 1473.976807,2581.658936 C1480.734131,2604.959473 1479.428589,2628.966309 1481.671875,2652.665527 C1483.043335,2667.154297 1483.592407,2681.803223 1486.171143,2696.080566 C1495.194458,2746.036865 1516.120972,2790.042725 1552.783691,2826.010742 C1590.274414,2862.791260 1635.590820,2883.290527 1687.236816,2888.890137 C1711.205566,2891.489014 1735.451172,2890.145996 1759.446411,2884.486328 C1816.666016,2870.989990 1862.153931,2840.553711 1895.524902,2792.388184 C1926.856567,2747.166260 1939.365479,2695.758545 1939.449829,2641.716064 C1940.081177,2237.102783 1940.137085,1832.488647 1940.331055,1427.874878 C1940.396973,1290.220947 1940.442261,1152.566772 1940.251709,1014.913025 C1940.216187,989.318420 1939.559448,963.695801 1938.179810,938.140564 C1936.948730,915.337463 1934.767334,892.559631 1932.214966,869.859558 C1927.428467,827.288635 1918.667358,785.433105 1907.574341,744.092773 C1882.863159,652.000427 1845.130005,565.497498 1794.500488,484.731110 C1747.981689,410.522247 1692.353516,343.841187 1627.661377,284.694214 C1585.855957,246.472275 1541.180298,212.089417 1493.367188,181.757034 C1421.454590,136.136017 1344.858276,100.820183 1263.543823,75.285439 C1168.950317,45.580776 1071.938965,32.982784 973.195557,31.299763 C937.264282,30.687336 901.534851,33.506969 865.865051,37.626083 C823.267578,42.545193 781.234863,50.480255 739.757324,61.200386 C634.645447,88.367188 536.866760,132.115051 446.623260,192.458771 C375.779144,239.830551 312.361786,295.708923 256.197449,359.876678 C202.724136,420.969910 157.845917,487.801453 121.057182,560.107727 C99.490295,602.496216 81.924583,646.570190 66.044662,693.026794 z",
            fill="#000000",
            stroke="none")

    path2 = tag("path", 
                d="M66.203972,692.247986 C81.924583,646.570190 99.490295,602.496216 121.057182,560.107727 C157.845917,487.801453 202.724136,420.969910 256.197449,359.876678 C312.361786,295.708923 375.779144,239.830551 446.623260,192.458771 C536.866760,132.115051 634.645447,88.367188 739.757324,61.200386 C781.234863,50.480255 823.267578,42.545193 865.865051,37.626083 C901.534851,33.506969 937.264282,30.687336 973.195557,31.299763 C1071.938965,32.982784 1168.950317,45.580776 1263.543823,75.285439 C1344.858276,100.820183 1421.454590,136.136017 1493.367188,181.757034 C1541.180298,212.089417 1585.855957,246.472275 1627.661377,284.694214 C1692.353516,343.841187 1747.981689,410.522247 1794.500488,484.731110 C1845.130005,565.497498 1882.863159,652.000427 1907.574341,744.092773 C1918.667358,785.433105 1927.428467,827.288635 1932.214966,869.859558 C1934.767334,892.559631 1936.948730,915.337463 1938.179810,938.140564 C1939.559448,963.695801 1940.216187,989.318420 1940.251709,1014.913025 C1940.442261,1152.566772 1940.396973,1290.220947 1940.331055,1427.874878 C1940.137085,1832.488647 1940.081177,2237.102783 1939.449829,2641.716064 C1939.365479,2695.758545 1926.856567,2747.166260 1895.524902,2792.388184 C1862.153931,2840.553711 1816.666016,2870.989990 1759.446411,2884.486328 C1735.451172,2890.145996 1711.205566,2891.489014 1687.236816,2888.890137 C1635.590820,2883.290527 1590.274414,2862.791260 1552.783691,2826.010742 C1516.120972,2790.042725 1495.194458,2746.036865 1486.171143,2696.080566 C1483.592407,2681.803223 1483.043335,2667.154297 1481.671875,2652.665527 C1479.428589,2628.966309 1480.734131,2604.959473 1473.976807,2581.658936 C1461.878784,2539.943115 1438.676270,2507.648438 1398.115601,2489.539062 C1347.861694,2467.101807 1286.566650,2478.814453 1249.471924,2518.443848 C1225.745239,2543.791748 1213.966797,2574.221924 1209.917847,2607.928711 C1208.101685,2623.048340 1208.474609,2638.422607 1207.651733,2653.670654 C1204.076416,2719.916504 1183.632568,2779.291748 1135.321655,2826.682617 C1105.243774,2856.187744 1069.227783,2875.221924 1027.933960,2884.253662 C962.734131,2898.513428 902.507629,2886.287354 848.069031,2848.516602 C804.806213,2818.499756 777.013000,2776.589600 761.850525,2726.285645 C752.872009,2696.498047 749.651794,2665.994873 749.468079,2634.916260 C749.310547,2608.267334 745.086243,2582.102295 733.815918,2557.570312 C712.859619,2511.955322 677.761658,2485.190918 627.651062,2479.368896 C584.583130,2474.365479 547.579407,2487.887939 517.518433,2518.894287 C496.308167,2540.771729 485.422394,2568.028076 479.848907,2597.713379 C475.959381,2618.429688 477.020569,2639.397705 475.630341,2660.237549 C471.790253,2717.800537 454.267731,2770.260986 415.769379,2814.218262 C381.247589,2853.635254 337.445068,2878.230469 286.065918,2886.633545 C215.337540,2898.201172 151.564240,2880.531982 97.259407,2833.127441 C67.381371,2807.046387 46.714317,2774.315186 33.836369,2736.700195 C26.177162,2714.328613 20.803106,2691.531250 19.662453,2667.849121 C18.928297,2652.606934 17.867193,2637.361816 17.748964,2622.112061 C17.467321,2585.784180 17.644651,2549.452881 17.660219,2513.122803 C17.880589,1998.859131 17.983309,1484.595337 18.587017,970.332092 C18.629709,933.966187 22.477526,897.651001 27.448465,861.493164 C33.784603,815.405212 43.504375,770.117615 56.206821,725.423828 C59.291714,714.569519 62.755234,703.822937 66.203972,692.247986 M1847.657349,1677.000122 C1847.657349,1464.004395 1847.704346,1251.008667 1847.598511,1038.012939 C1847.585083,1011.068542 1846.608521,984.125977 1846.375122,957.179932 C1846.156250,931.927673 1843.432617,906.905334 1840.307373,881.899780 C1833.546143,827.803284 1821.457275,774.904175 1804.498413,723.116699 C1783.214478,658.122314 1754.484497,596.630127 1718.636963,538.336426 C1675.494019,468.179108 1623.386597,405.507751 1562.673218,350.054413 C1525.829346,316.402466 1486.153564,286.307617 1443.994507,259.465637 C1372.596802,214.007797 1296.187988,179.743362 1214.901367,156.477478 C1147.911865,137.303757 1079.375122,127.044724 1009.812927,124.256210 C975.279541,122.871880 940.645020,122.918243 906.186279,126.220161 C867.545227,129.922836 829.196045,135.600769 791.205078,143.904465 C727.335205,157.864532 665.975464,178.993469 606.990845,207.005249 C556.108276,231.169434 508.035278,260.079163 462.734314,293.632874 C416.350281,327.988770 373.816345,366.597931 335.092285,409.307739 C294.575867,453.994446 259.241760,502.576569 228.791916,554.689636 C200.049301,603.880859 176.630188,655.494141 157.995621,709.306152 C142.124130,755.139160 130.310196,802.032776 122.557320,849.874451 C116.137703,889.489014 111.700638,929.371033 111.697968,969.586731 C111.660851,1527.904175 111.688095,2086.221680 111.617569,2644.539062 C111.614723,2667.072510 115.561157,2688.788330 123.289413,2709.841309 C131.328705,2731.741455 143.595856,2750.937500 161.484360,2766.124268 C193.434601,2793.248779 230.502609,2802.099609 271.375214,2795.294189 C299.825867,2790.557129 324.280823,2777.376953 343.771301,2756.150879 C363.085419,2735.116943 374.478485,2709.864014 379.898041,2681.866943 C383.062714,2665.518555 383.071533,2648.895508 384.627625,2632.416992 C387.718811,2599.683350 397.646881,2568.780762 414.431610,2540.334961 C437.673767,2500.945312 469.555756,2470.462402 510.592224,2450.263672 C548.536865,2431.586670 588.688477,2423.500000 631.220032,2427.105225 C660.066650,2429.550781 687.470947,2436.487549 713.375549,2449.188477 C763.675354,2473.849854 800.307312,2511.992920 823.310425,2562.940918 C834.733643,2588.241943 841.398682,2614.982178 842.226013,2642.839844 C842.711060,2659.171143 844.362854,2675.273682 848.424438,2691.062012 C857.236389,2725.316406 874.373962,2754.126953 904.057007,2774.497559 C927.274475,2790.431152 952.995605,2797.810791 981.140625,2797.320312 C1022.686401,2796.595703 1056.593750,2780.042725 1082.262329,2747.632568 C1101.551392,2723.277100 1110.414795,2694.521729 1113.631836,2663.959229 C1115.504761,2646.165527 1115.158081,2627.984863 1118.631958,2610.540039 C1133.449097,2536.134521 1174.576538,2480.634521 1242.646118,2446.774902 C1304.354370,2416.079834 1368.267090,2414.432373 1431.925293,2440.194824 C1488.645874,2463.149414 1529.513062,2503.771240 1554.572876,2559.652588 C1566.753662,2586.814453 1573.018188,2615.500977 1573.853027,2645.437256 	C1574.202026,2657.957031 1575.774048,2670.564697 1578.109497,2682.882324 C1583.412842,2710.854492 1594.874878,2736.177490 1614.814575,2756.825928 C1646.059692,2789.181885 1684.550415,2801.754395 1728.925415,2796.052246 C1767.330078,2791.117188 1797.465576,2772.246582 1819.109375,2740.173828 C1838.119263,2712.004150 1846.075195,2680.230713 1846.183960,2646.782715 C1846.903931,2425.519775 1847.275391,2204.255371 1847.629639,1982.991577 C1847.791870,1881.661377 1847.657349,1780.330688 1847.657349,1677.000122 z",
                fill="#FEFDFD",
                stroke="none")

    path3 = tag("path", 
                d="M1847.657349,1678.000244 C1847.657349,1780.330688 1847.791870,1881.661377 1847.629639,1982.991577 C1847.275391,2204.255371 1846.903931,2425.519775 1846.183960,2646.782715 C1846.075195,2680.230713 1838.119263,2712.004150 1819.109375,2740.173828 C1797.465576,2772.246582 1767.330078,2791.117188 1728.925415,2796.052246 C1684.550415,2801.754395 1646.059692,2789.181885 1614.814575,2756.825928 C1594.874878,2736.177490 1583.412842,2710.854492 1578.109497,2682.882324 C1575.774048,2670.564697 1574.202026,2657.957031 1573.853027,2645.437256 C1573.018188,2615.500977 1566.753662,2586.814453 1554.572876,2559.652588 C1529.513062,2503.771240 1488.645874,2463.149414 1431.925293,2440.194824 C1368.267090,2414.432373 1304.354370,2416.079834 1242.646118,2446.774902 C1174.576538,2480.634521 1133.449097,2536.134521 1118.631958,2610.540039 C1115.158081,2627.984863 1115.504761,2646.165527 1113.631836,2663.959229 C1110.414795,2694.521729 1101.551392,2723.277100 1082.262329,2747.632568 C1056.593750,2780.042725 1022.686401,2796.595703 981.140625,2797.320312 C952.995605,2797.810791 927.274475,2790.431152 904.057007,2774.497559 C874.373962,2754.126953 857.236389,2725.316406 848.424438,2691.062012 C844.362854,2675.273682 842.711060,2659.171143 842.226013,2642.839844 C841.398682,2614.982178 834.733643,2588.241943 823.310425,2562.940918 C800.307312,2511.992920 763.675354,2473.849854 713.375549,2449.188477 C687.470947,2436.487549 660.066650,2429.550781 631.220032,2427.105225 C588.688477,2423.500000 548.536865,2431.586670 510.592224,2450.263672 C469.555756,2470.462402 437.673767,2500.945312 414.431610,2540.334961 C397.646881,2568.780762 387.718811,2599.683350 384.627625,2632.416992 C383.071533,2648.895508 383.062714,2665.518555 379.898041,2681.866943 C374.478485,2709.864014 363.085419,2735.116943 343.771301,2756.150879 C324.280823,2777.376953 299.825867,2790.557129 271.375214,2795.294189 C230.502609,2802.099609 193.434601,2793.248779 161.484360,2766.124268 C143.595856,2750.937500 131.328705,2731.741455 123.289413,2709.841309 C115.561157,2688.788330 111.614723,2667.072510 111.617569,2644.539062 C111.688095,2086.221680 111.660851,1527.904175 111.697968,969.586731 C111.700638,929.371033 116.137703,889.489014 122.557320,849.874451 C130.310196,802.032776 142.124130,755.139160 157.995621,709.306152 C176.630188,655.494141 200.049301,603.880859 228.791916,554.689636 C259.241760,502.576569 294.575867,453.994446 335.092285,409.307739 C373.816345,366.597931 416.350281,327.988770 462.734314,293.632874 C508.035278,260.079163 556.108276,231.169434 606.990845,207.005249 C665.975464,178.993469 727.335205,157.864532 791.205078,143.904465 C829.196045,135.600769 867.545227,129.922836 906.186279,126.220161 C940.645020,122.918243 975.279541,122.871880 1009.812927,124.256210 C1079.375122,127.044724 1147.911865,137.303757 1214.901367,156.477478 C1296.187988,179.743362 1372.596802,214.007797 1443.994507,259.465637 C1486.153564,286.307617 1525.829346,316.402466 1562.673218,350.054413 C1623.386597,405.507751 1675.494019,468.179108 1718.636963,538.336426 C1754.484497,596.630127 1783.214478,658.122314 1804.498413,723.116699 C1821.457275,774.904175 1833.546143,827.803284 1840.307373,881.899780 C1843.432617,906.905334 1846.156250,931.927673 1846.375122,957.179932 C1846.608521,984.125977 1847.585083,1011.068542 1847.598511,1038.012939 C1847.704346,1251.008667 1847.657349,1464.004395 1847.657349,1678.000244 M1329.577637,1950.599976 C1333.583862,1946.594849 1337.743286,1942.730591 1341.572021,1938.562500 C1371.702881,1905.760864 1389.318115,1867.200317 1390.066040,1822.605347 C1391.144531,1758.309937 1390.377808,1693.982910 1390.259399,1629.669678 C1390.251709,1625.439575 1389.396606,1621.128662 1388.367432,1616.996826 C1384.095825,1599.847534 1365.028320,1585.042847 1344.063477,1585.071655 C1100.805542,1585.405640 857.547180,1585.285034 614.288940,1585.287231 C611.956848,1585.287231 609.602783,1585.114502 607.296021,1585.364380 C580.868347,1588.225464 564.047974,1611.277222 566.735291,1635.537598 C569.648621,1661.838867 588.404602,1677.290161 615.039124,1677.290527 C746.998413,1677.292725 878.957642,1677.291504 1010.916931,1677.291504 C1014.838623,1677.291504 1018.760254,1677.291504 1023.658081,1677.291504 C1023.658081,1681.450195 1023.658081,1684.696167 1023.658081,1687.942139 C1023.658081,1726.930054 1023.519958,1765.918945 1023.748962,1804.905518 C1023.811279,1815.501343 1024.520020,1826.143188 1025.721191,1836.674072 C1031.132812,1884.117188 1052.629761,1923.574341 1089.032837,1953.696655 C1137.733643,1993.994873 1193.754395,2006.127197 1255.306763,1990.594604 C1282.882324,1983.636108 1306.943970,1969.852051 1329.577637,1950.599976 M394.923340,1143.977905 C378.714142,1162.305054 381.225159,1192.376831 398.474731,1207.857056 C410.116394,1218.304688 420.675232,1229.952759 431.834442,1240.946167 C439.645081,1248.640991 447.651489,1256.137207 455.912933,1264.050171 C444.834015,1275.544800 434.783936,1286.106934 424.580353,1296.518433 C415.482513,1305.801758 405.954285,1314.674561 397.076965,1324.160034 C378.885254,1343.597778 379.453369,1372.335938 398.313538,1390.435547 C416.323578,1407.719360 445.680237,1407.472290 463.629303,1388.585083 C467.760773,1384.237671 472.098846,1380.086548 476.338715,1375.842041 C491.155396,1361.009033 505.970551,1346.174683 521.269531,1330.857056 C524.046814,1333.479858 526.496826,1335.649414 528.785400,1337.977783 C545.594666,1355.080200 562.268921,1372.316528 579.184387,1389.312988 C600.722839,1410.954590 637.538513,1407.271118 653.346130,1379.398682 C661.832397,1364.435547 661.474854,1338.897827 643.707031,1321.751831 C627.160889,1305.784668 611.115356,1289.298340 594.868408,1273.021606 C592.545471,1270.694458 590.329224,1268.260742 587.840332,1265.641479 C606.737305,1246.305664 625.316589,1227.302490 643.887268,1208.290894 C662.100586,1189.645020 660.617371,1158.534790 640.720337,1141.675293 C621.716003,1125.572144 595.348511,1126.268433 577.485962,1143.735229 C560.806213,1160.045532 544.472168,1176.709106 527.955505,1193.186646 C525.891907,1195.245239 523.642761,1197.117554 520.423584,1200.032471 C517.910278,1196.982422 515.978882,1194.220947 513.638916,1191.865234 C496.961761,1175.076416 480.215881,1158.355713 463.461395,1141.643799 C454.327576,1132.533325 443.478546,1128.060181 430.367859,1127.936401 C416.404907,1127.804810 405.354401,1133.305176 394.923340,1143.977905 M1543.413818,1307.586548 C1529.594727,1293.663086 1515.775635,1279.739502 1501.585449,1265.442017 C1519.723755,1247.346191 1537.047729,1229.859741 1554.610596,1212.616455 C1565.366455,1202.056396 1571.122192,1189.892944 1570.474609,1174.436401 C1569.659180,1154.976440 1560.079468,1141.895386 1542.941650,1134.046387 C1526.269165,1126.410522 1506.789062,1129.808716 1493.976440,1142.241699 C1476.540405,1159.161011 1459.272461,1176.253296 1441.906738,1193.245239 C1439.833252,1195.274170 1437.599487,1197.139038 1435.150879,1199.339722 C1420.308716,1184.492188 1405.955688,1170.130493 1391.598389,1155.772827 C1385.506592,1149.680786 1379.833618,1143.080933 1373.225952,1137.611084 C1355.932251,1123.295410 1329.105469,1124.905151 1312.977173,1140.052002 C1292.821045,1158.981567 1294.288208,1190.025391 1312.399414,1207.659058 C1331.711792,1226.462036 1350.603027,1245.697632 1371.087158,1266.151367 C1367.817383,1268.670898 1364.606812,1270.618408 1362.042236,1273.206055 C1344.939087,1290.463501 1328.035156,1307.917969 1310.941040,1325.184326 C1300.864624,1335.362061 1297.022583,1347.838745 1298.471680,1361.588623 C1301.732666,1392.529663 1330.029541,1406.530884 1351.992798,1402.359863 C1363.733521,1400.130249 1372.883301,1394.247192 1381.030518,1386.111328 C1397.528442,1369.636230 1413.994751,1353.129395 1430.513062,1336.674927 C1432.307739,1334.887207 1434.358765,1333.356689 1435.346558,1332.513184 C1454.525635,1351.170776 1473.308716,1369.110474 1491.678711,1387.464111 C1499.961182,1395.739258 1509.293213,1401.463745 1520.918091,1402.938721 C1554.658447,1407.219849 1577.912598,1376.558228 1572.643921,1349.484131 C1570.521362,1338.577637 1565.824829,1329.553467 1557.859131,1321.989746 C1553.271484,1317.633545 1548.888672,1313.061523 1543.413818,1307.586548 z",
                fill="#000000",
                stroke="none")

    path4 = tag("path", 
                d="M1329.066284,1951.089844 C1306.943970,1969.852051 1282.882324,1983.636108 1255.306763,1990.594604 C1193.754395,2006.127197 1137.733643,1993.994873 1089.032837,1953.696655 C1052.629761,1923.574341 1031.132812,1884.117188 1025.721191,1836.674072 C1024.520020,1826.143188 1023.811279,1815.501343 1023.748962,1804.905518 C1023.519958,1765.918945 1023.658081,1726.930054 1023.658081,1687.942139 C1023.658081,1684.696167 1023.658081,1681.450195 1023.658081,1677.291504 C1018.760254,1677.291504 1014.838623,1677.291504 1010.916931,1677.291504 C878.957642,1677.291504 746.998413,1677.292725 615.039124,1677.290527 C588.404602,1677.290161 569.648621,1661.838867 566.735291,1635.537598 C564.047974,1611.277222 580.868347,1588.225464 607.296021,1585.364380 C609.602783,1585.114502 611.956848,1585.287231 614.288940,1585.287231 C857.547180,1585.285034 1100.805542,1585.405640 1344.063477,1585.071655 C1365.028320,1585.042847 1384.095825,1599.847534 1388.367432,1616.996826 C1389.396606,1621.128662 1390.251709,1625.439575 1390.259399,1629.669678 C1390.377808,1693.982910 1391.144531,1758.309937 1390.066040,1822.605347 C1389.318115,1867.200317 1371.702881,1905.760864 1341.572021,1938.562500 C1337.743286,1942.730591 1333.583862,1946.594849 1329.066284,1951.089844 M1133.078125,1677.286133 C1127.820435,1677.286133 1122.562622,1677.286133 1116.337402,1677.286133 C1116.337402,1681.440063 1116.337402,1684.684570 1116.337402,1687.929199 C1116.337402,1729.569702 1116.266479,1771.210571 1116.417480,1812.850586 C1116.438965,1818.771973 1117.163208,1824.755859 1118.198853,1830.598022 C1125.755981,1873.232666 1167.518311,1908.482300 1215.099609,1904.176880 C1236.549072,1902.236084 1254.761719,1893.755615 1270.106934,1878.978516 C1290.487793,1859.352173 1298.464355,1834.792236 1298.368286,1806.995972 C1298.227905,1766.355347 1298.343140,1725.713745 1298.306152,1685.072632 C1298.303833,1682.534668 1297.927979,1679.996948 1297.737549,1677.604614 C1296.287964,1677.452759 1295.625244,1677.322754 1294.962646,1677.322632 C1241.662842,1677.303955 1188.363037,1677.295410 1133.078125,1677.286133 z",
                fill="#FEFDFD",
                stroke="none")

    path5 = tag("path", 
                d="M395.357819,1143.399902 C405.354401,1133.305176 416.404907,1127.804810 430.367859,1127.936401 C443.478546,1128.060181 454.327576,1132.533325 463.461395,1141.643799 C480.215881,1158.355713 496.961761,1175.076416 513.638916,1191.865234 C515.978882,1194.220947 517.910278,1196.982422 520.423584,1200.032471 C523.642761,1197.117554 525.891907,1195.245239 527.955505,1193.186646 C544.472168,1176.709106 560.806213,1160.045532 577.485962,1143.735229 C595.348511,1126.268433 621.716003,1125.572144 640.720337,1141.675293 C660.617371,1158.534790 662.100586,1189.645020 643.887268,1208.290894 C625.316589,1227.302490 606.737305,1246.305664 587.840332,1265.641479 C590.329224,1268.260742 592.545471,1270.694458 594.868408,1273.021606 C611.115356,1289.298340 627.160889,1305.784668 643.707031,1321.751831 C661.474854,1338.897827 661.832397,1364.435547 653.346130,1379.398682 C637.538513,1407.271118 600.722839,1410.954590 579.184387,1389.312988 C562.268921,1372.316528 545.594666,1355.080200 528.785400,1337.977783 C526.496826,1335.649414 524.046814,1333.479858 521.269531,1330.857056 C505.970551,1346.174683 491.155396,1361.009033 476.338715,1375.842041 C472.098846,1380.086548 467.760773,1384.237671 463.629303,1388.585083 C445.680237,1407.472290 416.323578,1407.719360 398.313538,1390.435547 C379.453369,1372.335938 378.885254,1343.597778 397.076965,1324.160034 C405.954285,1314.674561 415.482513,1305.801758 424.580353,1296.518433 C434.783936,1286.106934 444.834015,1275.544800 455.912933,1264.050171 C447.651489,1256.137207 439.645081,1248.640991 431.834442,1240.946167 C420.675232,1229.952759 410.116394,1218.304688 398.474731,1207.857056 C381.225159,1192.376831 378.714142,1162.305054 395.357819,1143.399902 z",
                fill="#FDFDFD",
                stroke="none")
    path6 = tag("path", 
                fill="#FEFEFE",
                d="M1543.913818,1308.086548 C1548.888672,1313.061523 1553.271484,1317.633545 1557.859131,1321.989746 C1565.824829,1329.553467 1570.521362,1338.577637 1572.643921,1349.484131 C1577.912598,1376.558228 1554.658447,1407.219849 1520.918091,1402.938721 C1509.293213,1401.463745 1499.961182,1395.739258 1491.678711,1387.464111 C1473.308716,1369.110474 1454.525635,1351.170776 1435.346558,1332.513184 C1434.358765,1333.356689 1432.307739,1334.887207 1430.513062,1336.674927 C1413.994751,1353.129395 1397.528442,1369.636230 1381.030518,1386.111328 C1372.883301,1394.247192 1363.733521,1400.130249 1351.992798,1402.359863 C1330.029541,1406.530884 1301.732666,1392.529663 1298.471680,1361.588623 C1297.022583,1347.838745 1300.864624,1335.362061 1310.941040,1325.184326 C1328.035156,1307.917969 1344.939087,1290.463501 1362.042236,1273.206055 C1364.606812,1270.618408 1367.817383,1268.670898 1371.087158,1266.151367 C1350.603027,1245.697632 1331.711792,1226.462036 1312.399414,1207.659058 C1294.288208,1190.025391 1292.821045,1158.981567 1312.977173,1140.052002 C1329.105469,1124.905151 1355.932251,1123.295410 1373.225952,1137.611084 C1379.833618,1143.080933 1385.506592,1149.680786 1391.598389,1155.772827 C1405.955688,1170.130493 1420.308716,1184.492188 1435.150879,1199.339722 C1437.599487,1197.139038 1439.833252,1195.274170 1441.906738,1193.245239 C1459.272461,1176.253296 1476.540405,1159.161011 1493.976440,1142.241699 C1506.789062,1129.808716 1526.269165,1126.410522 1542.941650,1134.046387 C1560.079468,1141.895386 1569.659180,1154.976440 1570.474609,1174.436401 C1571.122192,1189.892944 1565.366455,1202.056396 1554.610596,1212.616455 C1537.047729,1229.859741 1519.723755,1247.346191 1501.585449,1265.442017 C1515.775635,1279.739502 1529.594727,1293.663086 1543.913818,1308.086548 z",
                stroke="none")
    
    path7 = tag("path", 
            d="M1134.070679,1677.286133 C1188.363037,1677.295410 1241.662842,1677.303955 1294.962646,1677.322632 C1295.625244,1677.322754 1296.287964,1677.452759 1297.737549,1677.604614 C1297.927979,1679.996948 1298.303833,1682.534668 1298.306152,1685.072632 C1298.343140,1725.713745 1298.227905,1766.355347 1298.368286,1806.995972 C1298.464355,1834.792236 1290.487793,1859.352173 1270.106934,1878.978516 C1254.761719,1893.755615 1236.549072,1902.236084 1215.099609,1904.176880 C1167.518311,1908.482300 1125.755981,1873.232666 1118.198853,1830.598022 C1117.163208,1824.755859 1116.438965,1818.771973 1116.417480,1812.850586 C1116.266479,1771.210571 1116.337402,1729.569702 1116.337402,1687.929199 C1116.337402,1684.684570 1116.337402,1681.440063 1116.337402,1677.286133 C1122.562622,1677.286133 1127.820435,1677.286133 1134.070679,1677.286133 z",
            fill="#010101",
            stroke="none")
                
    # Creating the full SVG with the actual paths
    logo_svg = Svg(
        path2,
        path4,
        path5,
        path6,
        path7,
        width="120%",
        height="120%",
        viewBox="0 0 2000 2965",
        xmlns="http://www.w3.org/2000/svg"
    )

    
    return Header(
        Style(header_css),
        Script(inline_js),
        Nav(
            # Left section: Logo and menu button
            Div(
                A(
                    Div(
                        Div(
                            logo_svg,
                            cls="navLogo"
                        ),
                        Span("DEADDEVELOPERS", cls="navText"), 
                        cls="navLogoContainer"
                    ),
                    href="/", cls="brandLogo", onclick="setActivePage('/')"
                ),
                Button(
                    hamburger_icon,
                    close_icon,
                    cls="menuButton", 
                    type="button",
                    id="menuToggleButton",
                    aria_label="Toggle menu",
                    onclick="toggleMobileMenu()" # Re-add the inline onclick handler
                ),
                cls="navLeft"
            ),
            # Center navigation (desktop)
            Div(
                *[A(link["label"], 
                    href=link["href"], 
                    id=link["id"], 
                    cls="active" if normalized_path == link["href"] else "", 
                    onclick=f"setActivePage('{link['href']}')")
                  for link in nav_links],
                cls="navCenter"
            ),
            # Right auth links (desktop)
            Div(
                A("Log in", href="/login", cls="navLogin"),
                A("Sign up", href="/signup", cls="navSignup"),
                cls="navRight"
            ),
            cls="mainNav"
        ),
        # Mobile menu (previously missing)
        Div(
            # Mobile menu links
            *[A(link["label"], 
                href=link["href"], 
                id=f"mobile-{link['id']}", 
                cls="mobileLink" + (" active" if normalized_path == link["href"] else ""))
              for link in nav_links],
            # Mobile auth buttons
            Div(
                A("Log in", href="/login", cls="navLogin"),
                A("Sign up", href="/signup", cls="navSignup"),
                cls="mobileAuthLinks"
            ),
            id="mobileMenu",
            cls="mobileMenu"
        ),
        # Backdrop for mobile menu (previously missing)
        Div(id="mobileMenuBackdrop", cls="mobileMenuBackdrop"),
        cls="siteHeader"
    )

# Route definitions with Request object
@rt("/")
def get(request):
    return Titled("Home", SiteHeader(request.path), Div("Welcome to the home page!"))

@rt("/features")
def get(request):
    return Titled("Features", SiteHeader(request.path), Div("Features page content"))

@rt("/community")
def get(request):
    return Titled("Community", SiteHeader(request.path), Div("Community page content"))

@rt("/blog")
def get(request):
    return Titled("Blog", SiteHeader(request.path), Div("Blog page content"))

@rt("/about")
def get(request):
    return Titled("About", SiteHeader(request.path), Div("About page content"))

@rt("/login")
def get(request):
    return Titled("Login", SiteHeader(request.path), Div("Login page content"))

@rt("/signup")
def get(request):
    return Titled("Sign Up", SiteHeader(request.path), Div("Sign up page content"))

# Serve the app
serve()